@model STrackerServer.Models.Episode.EpisodeView

@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/EpisodeLayout.cshtml";
}

<div class="container-fluid">
    <div class="row-fluid">
        <div class="span3">
            <img class="img-rounded" src="@Model.Poster" alt="No Artwork"/>  
            <div class="extra-padding"></div>
            
            @if(User.Identity.IsAuthenticated)
            {
                if (Model.IsSubscribed)
                {
                    if(Model.AsAired)
                    {
                        using (Html.BeginForm("Watched", "Episodes", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber }))
                        {
                            @Html.Hidden("RedirectUrl", Url.Action("Index","Episodes", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber }))
                            @Html.Hidden("Watched", !Model.Watched)  
                
                            if(Model.Watched)
                            {
                                <input class="btn btn-block btn-danger" type="submit" value="Uncheck"/>
                            }
                            else
                            {
                                <input class="btn btn-block btn-success" type="submit" value="Check"/>
                            }
                        }
                    }else
                    {
                        <p>
                            <button disabled="disabled" class="btn btn-block btn-success">Not aired</button>
                        </p> 
                    }  
                }
                else
                {
                    <p>
                        <a class="btn btn-block btn-success" href="@Url.Action("Index","TvShows", new { id = Model.TvShowId })">Need to be subscribed</a>
                    </p> 
                } 
            }
            else
            {
                <p>
                    <a class="btn btn-block btn-success" href="@Url.Action("Login", "Account", new { returnUrl = Url.Action("Index", "Episodes", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber })})">Check</a>
                </p> 
            }

            <p>
                <a class="btn btn-block btn-primary" href="@Url.Action("Comments","Episodes", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber })">Comments</a>
            </p> 
        </div>
        <div class="span6">
            <div id="rating-result"></div>
            <div class="box">
                <h3>
                    @Model.Name
                    @for (int i = 1; i < @Model.Rating + 1; i++)
                    {
                        <img data-star-value="@i" class="star" src="@Url.Content("~/Content/images/star.png")" alt="star"/>
                    }
                    @for (int i = Model.Rating + 1; i < 6; i++)
                    {
                        <img data-star-value="@i" class="star" src="@Url.Content("~/Content/images/star_white.png")" alt="star"/>
                    }
                    <span style="font-size: 13px">from @Model.RatingsCount User(s)</span>
                    <a id="rating-link" style="font-size: 17px" href="@Url.Action("Rate","Episodes", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber })">
                        Rate
                    </a>
                </h3> 
                <ul class="stracker-breadcrumb">
                    <li><a href="@Url.Action("Index","TvShows", new { id = Model.TvShowId })">@Model.TvShowName</a> <span class="divider">/</span></li>
                    <li><a href="@Url.Action("Index","Seasons", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber })">Season @Model.SeasonNumber</a> <span class="divider">/</span></li>
                    <li class="active">Episode @Model.EpisodeNumber</li>
                </ul>
                <p>@Model.Description</p>
                @if (User.Identity.IsAuthenticated && Model.UserRating != -1)
                {
                    <p><b>Your Rating: </b> @Model.UserRating/5</p>
                }            
                <p><b>Date: </b>@Model.Date</p>
                @if (Model.Directors.Count != 0)
                {
                    <p><b>Directors:</b></p>
                    <ul>
                        @foreach(var director in Model.Directors)
                        {
                            <li>@director.Name</li>
                        }                           
                    </ul>
                }     
                @if (Model.GuestActors.Count != 0)
                {
                    <p><b>Guest Actors:</b></p>
                    <ul>
                        @foreach (var actor in Model.GuestActors)
                        {
                            <li>@actor.Name</li>
                        }                           
                    </ul>
                }  
            </div>
            <div class="row-fluid">
                <div class="span3">
                    @if (Model.PreviousEpisode != null)
                    {
                        <a href="@Url.Action("Index","Episodes", new { tvshowId = Model.PreviousEpisode.Id.TvShowId, seasonNumber = Model.PreviousEpisode.Id.SeasonNumber, episodeNumber = Model.PreviousEpisode.Id.EpisodeNumber })">
                            Previous Episode
                        </a>
                    }
                </div>
                <div class="span7"></div>
                <div class="span2">
                    @if (Model.NextEpisode != null)
                    {
                        <a href="@Url.Action("Index","Episodes", new { tvshowId = Model.NextEpisode.Id.TvShowId, seasonNumber = Model.NextEpisode.Id.SeasonNumber, episodeNumber = Model.NextEpisode.Id.EpisodeNumber })">
                            Next Episode
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>