@model STrackerServer.Models.Episode.EpisodeView

@{
    ViewBag.Title = Model.Name;
    Layout = "~/Views/Shared/MainLayout.cshtml";
}

<div class="container-fluid">
    <div class="row-fluid">
    </div>
    <div class="row-fluid">
        <div class="span3">
            <img class="img-rounded" src="@Model.Poster" alt="No Artwork"/>  
            <div class="extra-padding"></div>
            
            @if(User.Identity.IsAuthenticated)
            {
                if (Model.IsSubscribed)
                {
                    if(Model.AsAired)
                    {
                        using (Html.BeginForm("Watched", "EpisodesWeb", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber }))
                        {
                            @Html.Hidden("RedirectUrl", Url.Action("Show","EpisodesWeb", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber }))
                            @Html.Hidden("Watched", !Model.Watched)  
                
                            if(Model.Watched)
                            {
                                <input class="btn btn-block btn-danger" type="submit" value="Uncheck"/>
                            }
                            else
                            {
                                <input class="btn btn-block btn-success" type="submit" value="Check"/>
                            }
                        }
                    }else
                    {
                        <p>
                            <button disabled="disabled" class="btn btn-block btn-success">Not aired</button>
                        </p> 
                    }  
                }
                else
                {
                    <p>
                        <a class="btn btn-block btn-success" href="@Url.Action("Show","TvShowsWeb", new { tvshowId = Model.TvShowId })">Need to be subscribed</a>
                    </p> 
                } 
            }
            else
            {
                <p>
                    <a class="btn btn-block btn-success" href="@Url.Action("Login", "Account", new { returnUrl = Url.Action("Show", "EpisodesWeb", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber })})">Check</a>
                </p> 
            }

            <p>
                <a class="btn btn-block btn-primary" href="@Url.Action("Rate","EpisodesWeb", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber })">Rate</a>
            </p> 
            <p>
                <a class="btn btn-block btn-primary" href="@Url.Action("Comments","EpisodesWeb", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber, episodeNumber = Model.EpisodeNumber })">Comments</a>
            </p> 
        </div>
        <div class="span6">
            <div class="box">
                
                <h3>@Model.Name</h3> 
                <ul class="stracker-breadcrumb">
                    <li><a href="@Url.Action("Show","TvShowsWeb", new { tvshowId = Model.TvShowId })">@Model.TvShowName</a> <span class="divider">/</span></li>
                    <li><a href="@Url.Action("Show","SeasonsWeb", new { tvshowId = Model.TvShowId, seasonNumber = Model.SeasonNumber })">Season @Model.SeasonNumber</a> <span class="divider">/</span></li>
                    <li class="active">Episode @Model.EpisodeNumber</li>
                </ul>
                <br/>
                <p>@Model.Description</p>
                <p><b>Date: </b>@Model.Date</p>
                <p><b>Rating: </b> @Model.Rating/5 (from @Model.RatingsCount Users)</p>
                @if (User.Identity.IsAuthenticated && Model.UserRating != -1)
                {
                    <p><b>Your Rating: </b> @Model.UserRating/5</p>
                }            

                @if (Model.Directors.Count != 0)
                {
                    <p><b>Directors:</b></p>
                    <ul>
                        @foreach(var director in Model.Directors)
                        {
                            <li>@director.Name</li>
                        }                           
                    </ul>
                }     
                @if (Model.GuestActors.Count != 0)
                {
                    <p><b>Guest Actors:</b></p>
                    <ul>
                        @foreach (var actor in Model.GuestActors)
                        {
                            <li>@actor.Name</li>
                        }                           
                    </ul>
                }                     
            </div>
        </div>  
    </div>
</div>